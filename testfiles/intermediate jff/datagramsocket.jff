<?xml version="1.0" encoding="UTF-8" standalone="no"?><structure><type>fa</type><automaton><state id="0" name="q0"/><state id="1" name="q1"/><state id="2" name="q2"><initial/></state><state id="3" name="q3"/><state id="4" name="q4"/><state id="5" name="q5"><final/></state><state id="6" name="q6"/><transition><from>0</from><to>3</to><read>java.net.DatagramSocket.getLocalSocketAddress()</read></transition><transition><from>0</from><to>3</to><read>java.net.DatagramSocket.bind()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.getLocalSocketAddress()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getLocalSocketAddress()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getLocalSocketAddress()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getInetAddress()</read></transition><transition><from>6</from><to>3</to><read>java.net.DatagramSocket.bind()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.setTrafficClass()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.setTrafficClass()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setTrafficClass()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setReuseAddress()</read></transition><transition><from>0</from><to>6</to><read>java.net.DatagramSocket.setReuseAddress()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.getLocalAddress()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getLocalAddress()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getLocalAddress()</read></transition><transition><from>0</from><to>3</to><read>java.net.DatagramSocket.getLocalAddress()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.setReceiveBufferSize()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.setReceiveBufferSize()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setReceiveBufferSize()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.setSoTimeout()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.setSoTimeout()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setSoTimeout()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.getBroadcast()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getBroadcast()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getBroadcast()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.receive()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.receive()</read></transition><transition><from>0</from><to>1</to><read>java.net.DatagramSocket.receive()</read></transition><transition><from>3</from><to>1</to><read>java.net.DatagramSocket.receive()</read></transition><transition><from>2</from><to>0</to><read>java.net.DatagramSocket.&lt;init&gt;()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.setSendBufferSize()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.setSendBufferSize()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setSendBufferSize()</read></transition><transition><from>3</from><to>4</to><read>java.net.DatagramSocket.connect()</read></transition><transition><from>0</from><to>4</to><read>java.net.DatagramSocket.connect()</read></transition><transition><from>1</from><to>4</to><read>java.net.DatagramSocket.connect()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.getSoTimeout()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getSoTimeout()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getSoTimeout()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.getLocalPort()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getLocalPort()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getLocalPort()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.getSendBufferSize()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getSendBufferSize()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getSendBufferSize()</read></transition><transition><from>0</from><to>3</to><read>java.net.DatagramSocket.getLocalPort()</read></transition><transition><from>6</from><to>5</to><read>java.net.DatagramSocket.close()</read></transition><transition><from>4</from><to>5</to><read>java.net.DatagramSocket.close()</read></transition><transition><from>3</from><to>5</to><read>java.net.DatagramSocket.close()</read></transition><transition><from>0</from><to>5</to><read>java.net.DatagramSocket.close()</read></transition><transition><from>1</from><to>5</to><read>java.net.DatagramSocket.close()</read></transition><transition><from>4</from><to>1</to><read>java.net.DatagramSocket.disconnect()</read></transition><transition><from>5</from><to>5</to><read>java.net.DatagramSocket.isClosed()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getReuseAddress()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.getReceiveBufferSize()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getReceiveBufferSize()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getReceiveBufferSize()</read></transition><transition><from>0</from><to>6</to><read>java.net.DatagramSocket.getReuseAddress()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getPort()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.getRemoteSocketAddress()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.setBroadcast()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.setBroadcast()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.setBroadcast()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.isConnected()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.getTrafficClass()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.isConnected()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.isConnected()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.getTrafficClass()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.isConnected()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.isConnected()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.getTrafficClass()</read></transition><transition><from>0</from><to>0</to><read>java.net.DatagramSocket.isBound()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.isBound()</read></transition><transition><from>3</from><to>3</to><read>java.net.DatagramSocket.isBound()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.isBound()</read></transition><transition><from>6</from><to>6</to><read>java.net.DatagramSocket.isBound()</read></transition><transition><from>0</from><to>1</to><read>java.net.DatagramSocket.send()</read></transition><transition><from>1</from><to>1</to><read>java.net.DatagramSocket.send()</read></transition><transition><from>4</from><to>4</to><read>java.net.DatagramSocket.send()</read></transition><transition><from>3</from><to>1</to><read>java.net.DatagramSocket.send()</read></transition></automaton></structure>