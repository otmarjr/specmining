<?xml version="1.0" encoding="UTF-8" standalone="no"?><structure><type>fa</type><automaton><state id="0" name="q0"><final/></state><state id="1" name="q1"><final/></state><state id="2" name="q2"><initial/></state><state id="3" name="q3"><final/></state><state id="4" name="q4"><final/></state><state id="5" name="q5"><final/></state><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.addAll()</read></transition><transition><from>3</from><to>0</to><read>java.util.Iterator.next()</read></transition><transition><from>1</from><to>0</to><read>java.util.Iterator.next()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.containsAll()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.contains()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.clear()</read></transition><transition><from>5</from><to>4</to><read>java.util.LinkedHashSet.iterator()</read></transition><transition><from>0</from><to>0</to><read>java.util.LinkedHashSet.iterator()</read></transition><transition><from>0</from><to>3</to><read>java.util.Iterator.hasNext()</read></transition><transition><from>1</from><to>1</to><read>java.util.LinkedHashSet.iterator()</read></transition><transition><from>3</from><to>1</to><read>java.util.Iterator.remove()</read></transition><transition><from>3</from><to>3</to><read>java.util.LinkedHashSet.iterator()</read></transition><transition><from>4</from><to>4</to><read>java.util.LinkedHashSet.iterator()</read></transition><transition><from>1</from><to>1</to><read>java.util.Iterator.hasNext()</read></transition><transition><from>3</from><to>3</to><read>java.util.Iterator.hasNext()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.size()</read></transition><transition><from>2</from><to>5</to><read>java.util.LinkedHashSet.&lt;init&gt;()</read></transition><transition><from>0</from><to>4</to><read>java.util.Iterator.remove()</read></transition><transition><from>4</from><to>1</to><read>java.util.Iterator.hasNext()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.remove()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.add()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.isEmpty()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.retainAll()</read></transition><transition><from>5</from><to>5</to><read>java.util.LinkedHashSet.removeAll()</read></transition></automaton></structure>