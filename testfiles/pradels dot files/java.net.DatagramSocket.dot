digraph Automaton {
  rankdir = LR;
  0 [shape=circle,label=""];
  0 -> 1 [label="#1.java.net.DatagramSocket.receive() [1]",style="setlinewidth(1)",color=gray]
  0 -> 3 [label="#1.java.net.DatagramSocket.getLocalSocketAddress() [1]",style="setlinewidth(1)",color=gray]
  0 -> 3 [label="#1.java.net.DatagramSocket.bind() [1]",style="setlinewidth(1)",color=gray]
  0 -> 5 [label="#1.java.net.DatagramSocket.close() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.setSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.getSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  0 -> 1 [label="#1.java.net.DatagramSocket.send() [1]",style="setlinewidth(1)",color=gray]
  0 -> 4 [label="#1.java.net.DatagramSocket.connect() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.getSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.getBroadcast() [1]",style="setlinewidth(1)",color=gray]
  0 -> 3 [label="#1.java.net.DatagramSocket.getLocalPort() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.setReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.setSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.getReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.setTrafficClass() [1]",style="setlinewidth(1)",color=gray]
  0 -> 3 [label="#1.java.net.DatagramSocket.getLocalAddress() [1]",style="setlinewidth(1)",color=gray]
  0 -> 6 [label="#1.java.net.DatagramSocket.getReuseAddress() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.setBroadcast() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.isBound() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.isConnected() [1]",style="setlinewidth(1)",color=gray]
  0 -> 6 [label="#1.java.net.DatagramSocket.setReuseAddress() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.net.DatagramSocket.getTrafficClass() [1]",style="setlinewidth(1)",color=gray]
  1 [shape=circle,label=""];
  1 -> 1 [label="#1.java.net.DatagramSocket.receive() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.getLocalSocketAddress() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.getLocalAddress() [1]",style="setlinewidth(1)",color=gray]
  1 -> 5 [label="#1.java.net.DatagramSocket.close() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.isBound() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.send() [1]",style="setlinewidth(1)",color=gray]
  1 -> 4 [label="#1.java.net.DatagramSocket.connect() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.isConnected() [1]",style="setlinewidth(1)",color=gray]
  1 -> 1 [label="#1.java.net.DatagramSocket.getLocalPort() [1]",style="setlinewidth(1)",color=gray]
  2 [shape=circle,label=""];
  initial [shape=plaintext,label=""];
  initial -> 2
  2 -> 0 [label="#1.java.net.DatagramSocket.<init>() [1]",style="setlinewidth(1)",color=gray]
  3 [shape=circle,label=""];
  3 -> 1 [label="#1.java.net.DatagramSocket.receive() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getLocalSocketAddress() [1]",style="setlinewidth(1)",color=gray]
  3 -> 5 [label="#1.java.net.DatagramSocket.close() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.setSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  3 -> 1 [label="#1.java.net.DatagramSocket.send() [1]",style="setlinewidth(1)",color=gray]
  3 -> 4 [label="#1.java.net.DatagramSocket.connect() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getBroadcast() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getLocalPort() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.setReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.setSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.setTrafficClass() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getLocalAddress() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.setBroadcast() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.isBound() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.isConnected() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.net.DatagramSocket.getTrafficClass() [1]",style="setlinewidth(1)",color=gray]
  4 [shape=circle,label=""];
  4 -> 4 [label="#1.java.net.DatagramSocket.receive() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getLocalSocketAddress() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getRemoteSocketAddress() [1]",style="setlinewidth(1)",color=gray]
  4 -> 1 [label="#1.java.net.DatagramSocket.disconnect() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getLocalAddress() [1]",style="setlinewidth(1)",color=gray]
  4 -> 5 [label="#1.java.net.DatagramSocket.close() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getPort() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.isBound() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.send() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.isConnected() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getLocalPort() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.net.DatagramSocket.getInetAddress() [1]",style="setlinewidth(1)",color=gray]
  5 [shape=doublecircle,label=""];
  5 -> 5 [label="#1.java.net.DatagramSocket.isClosed() [1]",style="setlinewidth(1)",color=gray]
  6 [shape=circle,label=""];
  6 -> 3 [label="#1.java.net.DatagramSocket.bind() [1]",style="setlinewidth(1)",color=gray]
  6 -> 5 [label="#1.java.net.DatagramSocket.close() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getSendBufferSize() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getBroadcast() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setSoTimeout() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getReceiveBufferSize() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setTrafficClass() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getReuseAddress() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setBroadcast() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.isBound() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.isConnected() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.setReuseAddress() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.net.DatagramSocket.getTrafficClass() [1]",style="setlinewidth(1)",color=gray]
}
