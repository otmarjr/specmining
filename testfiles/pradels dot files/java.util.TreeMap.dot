digraph Automaton {
  rankdir = LR;
  0 [shape=doublecircle,label=""];
  0 -> 0 [label="#2.java.util.Collection.iterator() [1]",style="setlinewidth(1)",color=gray]
  0 -> 4 [label="#3.java.util.Iterator.remove() [1]",style="setlinewidth(1)",color=gray]
  0 -> 2 [label="#3.java.util.Iterator.next() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#3.java.util.Iterator.hasNext() [1]",style="setlinewidth(1)",color=gray]
  1 [shape=circle,label=""];
  initial [shape=plaintext,label=""];
  initial -> 1
  1 -> 6 [label="#1.java.util.TreeMap.<init>() [1]",style="setlinewidth(1)",color=gray]
  2 [shape=doublecircle,label=""];
  2 -> 2 [label="#2.java.util.Collection.iterator() [1]",style="setlinewidth(1)",color=gray]
  2 -> 3 [label="#3.java.util.Iterator.remove() [1]",style="setlinewidth(1)",color=gray]
  2 -> 2 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  2 -> 0 [label="#3.java.util.Iterator.hasNext() [1]",style="setlinewidth(1)",color=gray]
  3 [shape=doublecircle,label=""];
  3 -> 3 [label="#2.java.util.Collection.iterator() [1]",style="setlinewidth(1)",color=gray]
  3 -> 3 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  3 -> 4 [label="#3.java.util.Iterator.hasNext() [1]",style="setlinewidth(1)",color=gray]
  4 [shape=doublecircle,label=""];
  4 -> 4 [label="#2.java.util.Collection.iterator() [1]",style="setlinewidth(1)",color=gray]
  4 -> 2 [label="#3.java.util.Iterator.next() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  4 -> 4 [label="#3.java.util.Iterator.hasNext() [1]",style="setlinewidth(1)",color=gray]
  5 [shape=doublecircle,label=""];
  5 -> 5 [label="#1.java.util.TreeMap.keySet() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.pollFirstEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.floorEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.containsKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.isEmpty() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.containsValue() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.subMap() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.descendingKeySet() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.floorKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.put() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.descendingMap() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.get() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.lastEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.pollLastEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.tailMap() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.higherEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.lowerEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.ceilingEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.remove() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.ceilingKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.headMap() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.lastKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.clear() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.entrySet() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.size() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.putAll() [1]",style="setlinewidth(1)",color=gray]
  5 -> 3 [label="#2.java.util.Collection.iterator() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.comparator() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.firstEntry() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.higherKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.navigableKeySet() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.firstKey() [1]",style="setlinewidth(1)",color=gray]
  5 -> 5 [label="#1.java.util.TreeMap.lowerKey() [1]",style="setlinewidth(1)",color=gray]
  6 [shape=doublecircle,label=""];
  6 -> 6 [label="#1.java.util.TreeMap.keySet() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.pollFirstEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.floorEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.containsKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 5 [label="#1.java.util.TreeMap.values() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.isEmpty() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.containsValue() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.subMap() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.descendingKeySet() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.floorKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.put() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.descendingMap() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.get() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.lastEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.pollLastEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.tailMap() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.higherEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.lowerEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.ceilingEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.remove() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.ceilingKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.headMap() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.lastKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.clear() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.entrySet() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.size() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.putAll() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.comparator() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.firstEntry() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.higherKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.navigableKeySet() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.firstKey() [1]",style="setlinewidth(1)",color=gray]
  6 -> 6 [label="#1.java.util.TreeMap.lowerKey() [1]",style="setlinewidth(1)",color=gray]
}
