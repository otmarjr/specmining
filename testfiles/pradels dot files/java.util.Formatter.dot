digraph Automaton {
  rankdir = LR;
  0 [shape=circle,label=""];
  0 -> 2 [label="#1.java.util.Formatter.format() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.util.Formatter.locale() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.util.Formatter.out() [1]",style="setlinewidth(1)",color=gray]
  0 -> 0 [label="#1.java.util.Formatter.ioException() [1]",style="setlinewidth(1)",color=gray]
  0 -> 1 [label="#1.java.util.Formatter.close() [1]",style="setlinewidth(1)",color=gray]
  1 [shape=doublecircle,label=""];
  1 -> 1 [label="#1.java.util.Formatter.ioException() [1]",style="setlinewidth(1)",color=gray]
  2 [shape=circle,label=""];
  2 -> 2 [label="#1.java.util.Formatter.format() [1]",style="setlinewidth(1)",color=gray]
  2 -> 2 [label="#1.java.util.Formatter.locale() [1]",style="setlinewidth(1)",color=gray]
  2 -> 2 [label="#1.java.util.Formatter.out() [1]",style="setlinewidth(1)",color=gray]
  2 -> 0 [label="#1.java.util.Formatter.flush() [1]",style="setlinewidth(1)",color=gray]
  2 -> 2 [label="#1.java.util.Formatter.ioException() [1]",style="setlinewidth(1)",color=gray]
  2 -> 1 [label="#1.java.util.Formatter.close() [1]",style="setlinewidth(1)",color=gray]
  3 [shape=circle,label=""];
  initial [shape=plaintext,label=""];
  initial -> 3
  3 -> 0 [label="#1.java.util.Formatter.<init>() [1]",style="setlinewidth(1)",color=gray]
}
